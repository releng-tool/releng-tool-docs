# SOME DESCRIPTIVE TITLE.
# Copyright (C) releng-tool
# This file is distributed under the same license as the releng-tool
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: releng-tool \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-19 22:58-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../content/guides/packages/deprecated-pkg-options.md:1
msgid "Deprecated package options"
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:3
msgid ""
"The following outlines deprecated configuration options for packages. It "
"is not recommended to use these options."
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:7
msgid "`LIBFOO_DEPENDENCIES`"
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:10
msgid ""
"The option is deprecated and packages should use [`LIBFOO_NEEDS`](pkg-"
"opt-needs) instead."
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:14
msgid ""
"List of package dependencies a given project has. If a project depends on"
" another package, the package name should be listed in this option. This "
"ensures releng-tool will process packages in the proper order. The "
"following shows an example package `libfoo` being dependent on `liba` and"
" `libb` being processed first:"
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:28
msgid "`LIBFOO_SKIP_REMOTE_CONFIG`"
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:31
msgid ""
"The option is deprecated and packages should use [`LIBFOO_REMOTE_CONFIG"
"`](pkg-opt-remote-config) instead."
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:35
msgid ""
"Flag value to indicate that a package should not attempt to load any "
"package configurations which may be defined in the package's source. A "
"package, by default, has the ability to load configuration information "
"from a package's source. If the package includes a `.releng-tool` file at"
" the root of their sources, supported configuration options that have not"
" been populated will be registered into the package before invoking a "
"package's configuration stage."
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:47
msgid ""
"See also [`releng.disable_remote_configs` quirk](quirk-"
"releng.disable_remote_configs)."
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:51
msgid "`LIBFOO_SKIP_REMOTE_SCRIPTS`"
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:54
msgid ""
"The option is deprecated and packages should use [`LIBFOO_REMOTE_SCRIPTS"
"`](pkg-opt-remote-scripts) instead."
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:58
msgid ""
"Flag value to indicate that a package should not attempt to load any "
"package scripts which may be defined in the package's source. Typically, "
"a script-based package will load configuration, build, etc. scripts from "
"its package definition folder. If a script-based package is missing a "
"stage script to invoke and finds an associated script in the package's "
"source, the detected script will be invoked. For example, if `libfoo` "
"package may attempt to load a `libfoo-configure` script for a "
"configuration stage. In the event that the script cannot be found and "
"remote scripting is permitted for a package, the script (if exists) "
"`releng-configure` will be loaded from the root of the package's "
"contents."
msgstr ""

#: ../../content/guides/packages/deprecated-pkg-options.md:73
msgid ""
"See also [`releng.disable_remote_scripts` quirk](quirk-"
"releng.disable_remote_scripts)."
msgstr ""

