# SOME DESCRIPTIVE TITLE.
# Copyright (C) releng-tool
# This file is distributed under the same license as the releng-tool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: releng-tool\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-09 21:08-0400\n"
"PO-Revision-Date: 2023-07-29 21:24+0000\n"
"Language-Team: Japanese (https://app.transifex.com/releng-tool/teams/171906/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../content/news/2022-02-26_00.11.00.md:1
msgid "0.11 (2022-02-26)"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:3
msgid "New script functions"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:5
msgid ""
"A series of new helper script functions are now available for projects."
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:7
msgid ""
"The `releng_require_version` helper function has been added to allow releng-"
"tool projects to specify the minimum version of releng-tool needed to run a "
"project. For example, to indicate that at least v0.11 is required, the "
"following can be used:"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:16
msgid ""
"If the version requirement is not met, the releng-tool process will stop, "
"indicating that the host environment's releng-tool package requires an "
"update."
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:20
msgid ""
"At this time, using this option now may not yield ideal output for releng-"
"tool versions prior to v0.11, as the function is not available in these "
"version. A workaround that could be used is the following:"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:31
msgid ""
"The `releng_cat` and `releng_ls` helper functions have been introduced to "
"help developers examine/debug their releng-tool package states. The "
"`releng_cat` helper function can be used to dump the contents of a file to "
"the standard output stream (similar to the `cat` command):"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:40
msgid ""
"The `releng_ls` helper function can be used to dump the file listing for a "
"directory to the standard output stream (similar to the `ls` command):"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:47
msgid "Improved support for extracting zip files"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:49
msgid ""
"The initial zip-file extraction for releng-tool would cycle through defined "
"directory and file entries in an archive, ensuring directories were created "
"before writing extracted files into project's output directory. It has been "
"observed that with some archive files, the parsing of an archive may not "
"always identify directory entries. This can result in the extraction phase "
"failing for packages, where it attempts to extract a file to a directory "
"which has not been created."
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:57
msgid ""
"To be flexible with various zip archive types, this release adjusts the "
"extraction for zip files to always attempt to build directory paths, even if"
" a directory entry is not specified."
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:61
msgid "Introducing the `--force` argument"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:63
msgid ""
"For developers testing changes in their releng-tool project, or changes with"
" one or more packages defined in their project, a developer will most likely"
" try to reconfigure/rebuild packages to verify these changes. Since releng-"
"tool does not repeat completed stages, developers will utilize certain "
"packages actions to re-perform stages. For example, a developer can rebuild "
"a package using:"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:74
msgid ""
"While the various `libfoo-re*` actions can help a developer re-perform a "
"stage, sometimes a developer may wish to force a repeat trigger of all "
"stages in their project. By specifying the `--force` argument on the command"
" line, each package's configuration, build and install stages will be "
"performed again in the same manner as if a user invoked `libfoo-reconfigure`"
" on each package:"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:84
msgid ""
"A reminder to developers that rebuilds can be complex and may not always "
"yield the same results as a clean build."
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:87
msgid ""
"With the `--force` argument providing an easy way to perform "
"configuration/build/install stages again, the argument can also be used for "
"overriding some fetched content. If a user invokes releng-tool with the "
"`fetch` argument, all cachable version control content will be fetched "
"again:"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:96
msgid ""
"However, this does not apply to content which is stored into the download "
"(`dl/`) folder. If a user wanted to force the re-downloading of a package's "
"site without performing a `distclean` or manually deleting a package's file,"
" using the `fetch` action along with the `--force` argument can be used "
"instead. For example, to re-download a package's file:"
msgstr ""

#: ../../content/news/2022-02-26_00.11.00.md:106
msgid "Or re-download all package files:"
msgstr ""
