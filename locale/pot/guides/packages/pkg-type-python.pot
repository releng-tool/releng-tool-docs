# SOME DESCRIPTIVE TITLE.
# Copyright (C) releng-tool
# This file is distributed under the same license as the releng-tool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: releng-tool \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-08-19 23:35-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../content/guides/packages/pkg-type-python.md:1
msgid "Python package"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:3
msgid "A Python package provides support for processing a [Python][python] supported module."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:10
msgid "Only the build and installation phases are used when processing the sources for a Python package (i.e. no configuration stage is invoked). By default, the build phase will invoke `setup.py build` while the installation stage will invoke `setup.py install` (see [`LIBFOO_PYTHON_SETUP_TYPE`](pkg-opt-python-setup-type) for other setup types). When a Python package is process, it will use the system's default Python interpreter. A developer can override what Python interpreter to use by configuring the [`LIBFOO_PYTHON_INTERPRETER`](pkg-opt-python-interpreter) option in a package:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:25
msgid "The following sections outline configuration options are available for a Python package."
msgstr ""

#: ../../content/guides/packages/_pkg-build-defs.md:2
msgid "`LIBFOO_BUILD_DEFS`"
msgstr ""

#: ../../content/guides/packages/_pkg-build-defs.md:4
msgid "Provides a means to pass definitions into the build process. This option can is defined as a dictionary of string pairs. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-build-env.md:2
msgid "`LIBFOO_BUILD_ENV`"
msgstr ""

#: ../../content/guides/packages/_pkg-build-env.md:4
msgid "Provides a means to pass environment variables into the build process. This option is defined as a dictionary with key-value pairs where the key is the environment name and the value is the environment variable's value. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-build-opts.md:2
msgid "`LIBFOO_BUILD_OPTS`"
msgstr ""

#: ../../content/guides/packages/_pkg-build-opts.md:4
msgid "Provides a means to pass command line options into the build process. This option can be defined as a dictionary of string pairs or a list with strings -- either way defined will generate argument values to include in the build event. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-env.md:2
msgid "`LIBFOO_ENV`"
msgstr ""

#: ../../content/guides/packages/_pkg-env.md:4
msgid "Provides a means to pass environment variables into all stages for a package. This option is defined as a dictionary with key-value pairs where the key is the environment name and the value is the environment variable's value. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-install-defs.md:2
msgid "`LIBFOO_INSTALL_DEFS`"
msgstr ""

#: ../../content/guides/packages/_pkg-install-defs.md:4
msgid "Provides a means to pass definitions into the installation process. This option can is defined as a dictionary of string pairs. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-install-env.md:2
msgid "`LIBFOO_INSTALL_ENV`"
msgstr ""

#: ../../content/guides/packages/_pkg-install-env.md:4
msgid "Provides a means to pass environment variables into the installation process. This option is defined as a dictionary with key-value pairs where the key is the environment name and the value is the environment variable's value. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-install-opts.md:2
msgid "`LIBFOO_INSTALL_OPTS`"
msgstr ""

#: ../../content/guides/packages/_pkg-install-opts.md:4
msgid "Provides a means to pass command line options into the installation process. This option can be defined as a dictionary of string pairs or a list with strings -- either way defined will generate argument values to include in the installation event. This field is optional."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:61
msgid "`LIBFOO_PYTHON_INTERPRETER`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:63
msgid "Defines a specific Python interpreter when processing the build and installation stages for a package. If not specified, the system's Python interpreter will be used. This field is optional."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:72
msgid "`LIBFOO_PYTHON_SETUP_TYPE`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:74
msgid "The setup type will configure how a Python package is built and installed. The default setup type used for a Python package is a distutils package. It is recommended to always configure a setup type for a Python package. The following outlines available setup types in releng-tool:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "Type"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "Value"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "[Flit][flit]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "`flit`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "[Hatch][hatch]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "`hatch`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "[PDM][pdm]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "`pdm`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "[PEP 517 build][pypa-build]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "`pep517`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "[Poetry][poetry]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "`poetry`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "[Setuptools][setuptools]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "`setuptools`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "[distutils][distutils]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:57
msgid "`distutils` (default)"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:89
msgid "For example:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:95
msgid "For setup types other than Setuptools/distutils, the [`installer`][installer] module will be used to install packages to their destination folders."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:98
msgid "Host environments are required to pre-install needed packages in their running Python environment to support setup types not available in a standard Python distribution. For example, if a PDM setup type is set, the host system will need to have `pdm` Python module installed on the system."
msgstr ""
