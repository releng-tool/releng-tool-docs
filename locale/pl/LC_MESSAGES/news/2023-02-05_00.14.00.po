# SOME DESCRIPTIVE TITLE.
# Copyright (C) releng-tool
# This file is distributed under the same license as the releng-tool
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  releng-tool\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-23 20:20-0400\n"
"PO-Revision-Date: 2023-07-29 21:24+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: pl\n"
"Language-Team: Polish (https://app.transifex.com/releng-"
"tool/teams/171906/pl/)\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"

#: ../../content/news/2023-02-05_00.14.00.md:1
msgid "0.14 (2023-02-05)"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:3
msgid "Removal of the deprecated `releng` namespace"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:5
msgid ""
"It has been over two years since the switch from the `releng` namespace "
"to the `releng_tool` namespace. Projects using the obsolete namespace for"
" project scripting support will now be required to update there scripts "
"to use the most recent version of releng-tool. For projects which still "
"may be using the obsolete namespace, changes should be as simple as "
"changing implementation such as:"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:16
msgid "to:"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:22
msgid ""
"All calls supported in the previous namespace will be available in the "
"new namespace."
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:25
msgid "Software build of materials"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:27
msgid ""
"Projects will now automatically generate a software build of materials "
"(SBOM) at the end of a build. This can be helpful for environments which "
"want to have a summary (and even parsable) description of the package "
"components used, their versions, licenses and more. Users can find SBOM "
"documents in the configured output folder after a build."
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:33
msgid ""
"Various SBOM formats are supported. For example, users wanting to "
"generate a JSON SBOM output can use the `--sbom-format json` argument on "
"the command line. Generating an SBOM for a project does not require a "
"build, if desired -- users can generate an SBOM by using the action "
"`sbom` on a project. For example:"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:43
msgid "Promotion of SPDX license identifiers"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:45
msgid ""
"It is now recommended to use [SPDX license identifiers][spdx] for package"
" licenses. The goal is to help promote the use of standardized short "
"identifier for license entries, which can be helpful for environments "
"wishing to process SBOM output of a releng-tool project for license "
"analysis."
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:51
msgid ""
"When a package license is configured and the value does not match a SPDX "
"license identifier, a warning will be generated. Warnings will also be "
"generated when using deprecated identifiers as well."
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:55
msgid ""
"If a package is required to use a license string that is not a listed "
"SPDX license identifier, extra license and exception identifiers can be "
"registered in the project's configuration script. See the "
"`extra_licenses` and `extra_license_exceptions` configuration options for"
" more details."
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:61
msgid ""
"~~Note that releng-tool will not generate a warning if the license value "
"`Proprietary` is provided.~~ \\ **Edit**: As of v1.1+, we no longer a "
"`Proprietary` marking; use a [license identifier field][spdx-lif] "
"instead."
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:70
msgid "New environment/script variables"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:72
msgid ""
"This release includes the `*_BIN_DIR` environment/script variables. These"
" can be used to allow a developer to reference specific bin paths for the"
" host, staging or target areas. The following lists the newly added "
"variables:"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:77
msgid "`HOST_BIN_DIR` (e.g. `<host-dir>/usr/bin`)"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:78
msgid "`STAGING_BIN_DIR` (e.g. `<staging-dir>/usr/bin`)"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:79
msgid "`TARGET_BIN_DIR` (e.g. `<target-dir>/usr/bin`)"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:81
msgid "New move-into script function"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:83
msgid ""
"The `releng_move_into` helper function has been added to allow releng-"
"tool script to explicitly move a source into a target directory. This can"
" be helpful for users who wish to avoid scenarios using `releng_move` and"
" needing to ensure the destination directory exists or avoiding the need "
"to add a trailing file separator at the end of the destination target. An"
" example of this new call is as follows:"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:94
msgid "Support for Poetry Python setup type"
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:96
msgid ""
"The previous release of releng-tool introduces support for processing "
"Python packages using various common setup types. This release extends on"
" this by adding support for [Poetry][poetry]."
msgstr ""

#: ../../content/news/2023-02-05_00.14.00.md:100
msgid "For example:"
msgstr ""

