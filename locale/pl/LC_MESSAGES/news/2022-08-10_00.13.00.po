# SOME DESCRIPTIVE TITLE.
# Copyright (C) releng-tool
# This file is distributed under the same license as the releng-tool package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: releng-tool\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-09 21:08-0400\n"
"PO-Revision-Date: 2023-07-29 21:24+0000\n"
"Language-Team: Polish (https://app.transifex.com/releng-tool/teams/171906/pl/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pl\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && (n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"

#: ../../content/news/2022-08-10_00.13.00.md:1
msgid "0.13 (2022-08-10)"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:3
msgid "Allow project configuration path overrides"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:5
msgid ""
"When loading a project's configuration file, releng-tool will look for a "
"configuration file found in the `<root>/releng` path. If a user wishes to "
"load releng-tool with an alternative configuration (either for testing, "
"using multiple configurations, etc.), users can now specify the path of a "
"configuration file to load using the `--config` argument. For example:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:13
msgid "Support for make and SCons package types"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:15
msgid ""
"Introduction of the `make` and `scons` package types. These new package "
"types allow a developer to easily invoke Make and SCons targets at various "
"stages, without needing invoke these tools inside a scripts package."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:19
msgid "Support for Python setup types"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:21
msgid ""
"Python packages can now tailor their build and installation stages by "
"configuration setup types. Packages would originally be processed as if they"
" were distutils-managed packages. releng-tool now support additional setup "
"types:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:26
msgid "[Flit](https://flit.pypa.io)"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:27
msgid "[Hatch](https://hatch.pypa.io)"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:28
msgid "[PDM](https://pdm.fming.dev)"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:29
msgid "[PEP 517 (build)](https://pypa-build.readthedocs.io)"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:30
msgid "[Setuptools](https://setuptools.pypa.io)"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:32
msgid ""
"For example, if a Python package wishes to use Setuptools, the following can"
" be used:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:40
msgid ""
"For PEP 517 build systems, the [installer](https://installer.readthedocs.io)"
" module will be used to install packages to host, staging and target areas."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:43
msgid "Support development modes"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:45
msgid ""
"Specific development modes are now supported for a releng-tool run. "
"Developers can switch between a development version of a package over a "
"stable version by first enabling development mode:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:51
msgid ""
"For example, with development mode enabled, a `LIBFOO` package would instead"
" fetch sources from the `main` branch with the following package "
"configuration:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:59
msgid ""
"Developers may wish to have more than one alternative mode to target for, as"
" well as tweaking sites depending on the mode. A user can now invoke the "
"development argument with a mode value, which hints to the name of the mode "
"to build with. For example, if a user invoked releng-tool with the "
"following:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:66
msgid ""
"Subsequent runs will now be running under the `test` mode. If a package is "
"configured with `test`-specific mode, it can change what revision a package "
"will use as well as other possible tweaks. For example, with the following "
"package definition:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:82
msgid ""
"The `LIBFOO` package would normally fetch an archive folder based off the "
"configured version value. When operating in a `test` development mode, "
"sources for `LIBFOO` will now be fetched from the provided Git repository "
"using the `main` branch."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:87
msgid "Support path overrides for local-sources mode"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:89
msgid ""
"Users have had the ability to enable local-sources mode to load sources of "
"internal-marked packages from a local file system. This was achieved using "
"the `--local-sources` argument to enable this mode. The idea is allow users "
"developing on internal packages to clone packages in their development "
"environment manually, where releng-tool can build against and users can use "
"their own Git tools/capabilities to manage their sources."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:96
msgid ""
"Local-sources mode was limited on its usage. When enabled, all internal "
"packages were looked for in a parent path of a configured root directory, "
"without having any option to change the path or ignore for select packages. "
"With this most recent version, these options are now available."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:101
msgid ""
"The default of `--local-sources` (or just `-L`) will configure an "
"environment to look for packages in the parent folder of the root directory."
" For example, if a project has a `liba` package, sources for the package "
"will be found under `<root-dir>/../liba`. If a user provides a path to the "
"`--local-sources` argument, packages will now be looked for inside the "
"provided folder. For example:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:110
msgid ""
"Continuing with the example of `liba`, the sources for this packages will "
"now be looked for inside `~/workdir/liba`."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:113
msgid ""
"There can be cases where a developer may need to tweak the path of a "
"specific package. If a user specifies the package name prefixed to a path "
"inside the command line argument, a user can override where the specific "
"package sources are found. For example:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:120
msgid ""
"The above shows an example where sources for all internal packages will be "
"looked for inside `~/anotherdir`, with the exception of `libb` which will "
"look for its sources directly in the `/mnt/share/libb` path."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:124
msgid ""
"Users also have the ability to ignore local-sources for a specific package "
"(i.e. \"fetch all packages locally but these ones\"). Consider the following"
" example:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:130
msgid ""
"The above shows an example where sources for all internal packages will be "
"looked for inside `~/morework`, with the exception of `libc` which will "
"checkout sources normally as if local-sources mode was not enabled."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:134
msgid ""
"Reminder that users can disable local-sources mode by performing a "
"`distclean` action, or manually removing the `.releng-flag-local-sources` "
"file."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:137
msgid "New copy-into script function"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:139
msgid ""
"The `releng_copy_into` helper function has been added to allow releng-tool "
"script to explicitly copy a source into a target directory. This can be "
"helpful for users who wish to avoid scenarios using `releng_copy` to ensure "
"the destination directory exists or avoiding the need to add a trailing file"
" separator at the end of the destination target. An example of this new call"
" is as follows:"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:150
msgid "Support certificates override for bzr"
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:152
msgid ""
"When a package is configured to fetch [bzr][bzr] sources, select "
"environments may have issues attempting to download from Launchpad (or other"
" hosting) due to legacy certificates."
msgstr ""

#: ../../content/news/2022-08-10_00.13.00.md:159
msgid ""
"If a user's environment has [`certifi`][certifi] installed, a user can "
"invoke releng-tool with the quirk `releng.bzr.certifi` enabled to use "
"certifi's certificates instead. For example:"
msgstr ""
