# SOME DESCRIPTIVE TITLE.
# Copyright (C) releng-tool
# This file is distributed under the same license as the releng-tool
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  releng-tool\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-03 00:17+0000\n"
"PO-Revision-Date: 2023-07-29 21:24+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: pl\n"
"Language-Team: Polish (https://app.transifex.com/releng-"
"tool/teams/171906/pl/)\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../content/guides/packages/pkg-type-python.md:1
msgid "Python package"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:3
msgid ""
"A Python package provides support for processing a [Python][python] "
"supported module."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:10
msgid ""
"Only the build and installation phases are used when processing the "
"sources for a Python package (i.e. no configuration stage is invoked). "
"The [`LIBFOO_PYTHON_SETUP_TYPE`](pkg-opt-python-setup-type) configuration"
" dictates which build approach is performed for a package. The "
"installation stage for all Python packages uses the "
"[`installer`][installer] module. When a Python package is processed, it "
"will use the same Python interpreter used by releng-tool."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:19
msgid ""
"For environments where releng-tool has been installed using `pipx`, a "
"user will need to install any required build backend desired using the "
"[`pipx inject`][pipx-inject] command. For example, packages requiring "
"[Flit][flit] can install the build backend for their isolated environment"
" using:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:30
msgid ""
"A developer can override what Python interpreter to use by configuring "
"the [`LIBFOO_PYTHON_INTERPRETER`](pkg-opt-python-interpreter) option in a"
" package:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:38
msgid ""
"The following sections outline configuration options are available for a "
"Python package."
msgstr ""

#: ../../content/guides/packages/_pkg-build-defs.md:2
msgid "`LIBFOO_BUILD_DEFS`"
msgstr ""

#: ../../content/guides/packages/_pkg-build-defs.md:4
msgid ""
"Provides a means to pass definitions into the build process. This option "
"can is defined as a dictionary of string pairs. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-build-env.md:2
msgid "`LIBFOO_BUILD_ENV`"
msgstr ""

#: ../../content/guides/packages/_pkg-build-env.md:4
msgid ""
"Provides a means to pass environment variables into the build process. "
"This option is defined as a dictionary with key-value pairs where the key"
" is the environment name and the value is the environment variable's "
"value. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-build-opts.md:2
msgid "`LIBFOO_BUILD_OPTS`"
msgstr ""

#: ../../content/guides/packages/_pkg-build-opts.md:4
msgid ""
"Provides a means to pass command line options into the build process. "
"This option can be defined as a dictionary of string pairs or a list with"
" strings -- either way defined will generate argument values to include "
"in the build event. This field is optional."
msgstr ""

#: ../../content/guides/packages/_pkg-env.md:2
msgid "`LIBFOO_ENV`"
msgstr ""

#: ../../content/guides/packages/_pkg-env.md:7
msgid ""
"Provides a means to pass environment variables into all stages for a "
"package. This option is defined as a dictionary with key-value pairs "
"where the key is the environment name and the value is the environment "
"variable's value. This field is optional."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:59
msgid "`LIBFOO_INSTALL_DEFS`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:62
msgid ""
"No longer applicable as all Python packages are  installed using the "
"[`installer`][installer] module."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:66
msgid "`LIBFOO_INSTALL_ENV`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:69
#: ../../content/guides/packages/pkg-type-python.md:76
msgid ""
"No longer applicable as all Python packages are installed using the "
"[`installer`][installer] module."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:73
msgid "`LIBFOO_INSTALL_OPTS`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:81
msgid "`LIBFOO_PYTHON_DIST_PATH`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:86
msgid ""
"When a Python package is built, it will scan the `dist/` directory in "
"package's output directory for a wheel package. It is possible for some "
"Python packages to configure their projects to output built wheels into "
"an alternative path. If an alternative path is configured, releng-tool "
"will fail to find and install the package."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:92
msgid ""
"This option informs releng-tool what container folder hosts the provided "
"wheel package. For example, if the Python package configures itself to "
"output into `build/dist`, the following configuration can be used:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:101
msgid "`LIBFOO_PYTHON_INSTALLER_LAUNCHER_KIND`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:106
msgid ""
"Defines the launcher-kind to build when generating any executable scripts"
" defined in the Python package's project configuration "
"(`pyproject.toml`). By default, the launcher-kind is chosen based on the "
"host platform building the package. Supported options are dictated by "
"[`installer`][installer]. Options may include:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:112
msgid "`posix`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:113
msgid "`win-amd64`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:114
msgid "`win-arm64`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:115
msgid "`win-arm`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:116
msgid "`win-ia32`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:118
msgid ""
"For example, to explicitly build POSIX executable scripts, the following "
"configuration can be defined:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:126
msgid "`LIBFOO_PYTHON_INSTALLER_SCHEME`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:131
msgid ""
"Defines the installation scheme used for Python packages. By default, "
"releng-tool uses the following scheme entries:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "Path"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "Installation directory"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "data"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "`prefix`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "include"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "`prefix/include/python`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "platinclude"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "platlib"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "`prefix/lib/python`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "platstdlib"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "purelib"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "scripts"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "`prefix/bin`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:128
msgid "stdlib"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:145
msgid ""
"A package can be configured with a scheme `native` to use the default "
"install target based on the native system:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:152
msgid ""
"Packages can also use schemes supported by Python's "
"[`sysconfig`][sysconfig] module. For example:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:159
msgid "A package may also define a custom scheme:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:175
msgid "`LIBFOO_PYTHON_INTERPRETER`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:177
msgid ""
"Defines a specific Python interpreter when processing the build and "
"installation stages for a package. If not specified, the system's Python "
"interpreter will be used. This field is optional."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:186
msgid "`LIBFOO_PYTHON_SETUP_TYPE`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:190
msgid "Support added for `poetry`."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:193
msgid "Use of [`installer`][installer] is required for all package types."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:196
msgid "Support for `distutils` packages is deprecated."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:199
msgid ""
"The setup type will configure how a Python package is built and "
"installed. The default setup type used for a Python package is a "
"distutils package. It is recommended to always configure a setup type for"
" a Python package. The following outlines available setup types in "
"releng-tool:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "Type"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "Value"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "[Flit][flit]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "`flit`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "[Hatch][hatch]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "`hatch`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "[PDM][pdm]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "`pdm`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "[PEP 517 build][pypa-build]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "`pep517`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "[Poetry][poetry]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "`poetry`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "[Setuptools][setuptools]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "`setuptools`"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "[distutils][distutils]"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:195
msgid "`distutils` (default)"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:214
msgid "For example:"
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:220
msgid ""
"Host environments are required to pre-install needed packages in their "
"running Python environment to support setup types not available in a "
"standard Python distribution. For example, if a PDM setup type is set, "
"the host system will need to have `pdm` Python module installed on the "
"system."
msgstr ""

#: ../../content/guides/packages/pkg-type-python.md:226
msgid ""
"The [`installer`][installer] module will be used to install packages to "
"their destination folders. For  Setuptools/distutils packages, ensure "
"[`wheel`][wheel] is available to help build as packages will be built "
"with `bdist_wheel`."
msgstr ""

