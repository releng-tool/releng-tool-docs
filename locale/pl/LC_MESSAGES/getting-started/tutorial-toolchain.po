# SOME DESCRIPTIVE TITLE.
# Copyright (C) releng-tool
# This file is distributed under the same license as the releng-tool
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version:  releng-tool\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-03 00:17+0000\n"
"PO-Revision-Date: 2023-07-29 21:24+0000\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: pl\n"
"Language-Team: Polish (https://app.transifex.com/releng-"
"tool/teams/171906/pl/)\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && "
"(n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && "
"n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../content/getting-started/tutorial-toolchain.md:1
msgid "Tutorial \"A toolchain example\""
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:3
msgid ""
"This tutorial shows an example creating an application using a pre-built "
"toolchain. In this example, we will use a pre-built toolchain which (in "
"theory) has been used to prepare a Linux image for an embedded device. "
"With the same toolchain, we can define a releng-tool project that "
"prepares an application that can run on this embedded device."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:9
msgid ""
"This example will attempt to prepare a static build of [htop][htop] that "
"can run on an aarch64 system."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:12
msgid "Preparing the host environment"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:15
msgid ""
"A releng-tool project may create a package to download/setup a toolchain "
"package to use for a build. However, for this example, we will keep the "
"installation/availability of the toolchain outside of the releng-tool "
"project (for simplicity of this tutorial)."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:21
msgid ""
"First, we will prepare a toolchain on a host system to be used by our "
"releng-tool project. For this tutorial, we will use a [toolchain provided"
" by Bootlin][bootlin-tcs]. Download the following toolchain package:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:26
msgid "Architecture: aarch64"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:27
msgid "libc: glibc"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:28
msgid ""
"[https://toolchains.bootlin.com/.../aarch64--glibc--"
"stable-2022.08-1.tar.bz2][toolchain-archive]"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:29
msgid ""
"[https://toolchains.bootlin.com/.../aarch64--glibc--"
"stable-2022.08-1.sha256][toolchain-hash]"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:30
msgid ""
"(sha256: "
"`844df3c99508030ee9cb1152cb182500bb9816ff01968f2e18591d51d766c9e7`)"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:32
msgid ""
"Extract and place the toolchain into a desired location. In this example,"
" we will place the toolchain under `/opt`. However, users can install the"
" toolchain to whatever path they desire:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:43
msgid "Verify the ability to invoke GCC from the toolchain installation:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:53
msgid "Preparing a new releng-tool project"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:55
msgid "To build [htop][htop], this requires two dependencies:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:57
msgid "[Ncurses][ncurses]"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:58
msgid "[Netlink Protocol Library Suite (libnl)][libnl]"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:60
msgid ""
"Build a new project with the following structure to support our `htop` "
"package, dependencies and project configuration:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:78
msgid "The configuration"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:80
msgid ""
"The first changes we will make to our releng-tool project is to define "
"the specifics of the project configuration in `releng-tool.rt`. Apply the"
" following contents to the configuration:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:116
msgid ""
"Create a package list which defines `htop` as a required package to "
"build. Since we plan to make `libnl` and `ncurses` dependencies to "
"`htop`, they do not need to be included."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:119
msgid ""
"This project will rely on the host system having the toolchain installed."
" We create some variables to help point to the toolchain's path and "
"sysroot. Developers can make this flexible by allowing these options to "
"be configured by environment variables or using command line arguments, "
"but this will not be done here to simplify this tutorial."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:124
msgid ""
"We configure `BR_COMPILER_PARANOID_UNSAFE_PATH`, an option supported by "
"the generated Bootlin (Buildroot) toolchain to error when using an unsafe"
" path when performing a build (i.e. throw an error when using the "
"system's `/usr/include` path over a releng-tool sysroot path)."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:128
msgid ""
"Prepares two variables `MY_TOOLCHAIN_CONF_ENV` and "
"`MY_TOOLCHAIN_CONF_DEFS` which we can later use for the Autotools "
"packages we have. These values help configure toolchain and desired "
"releng-tool paths. Variables set in the root configuration can later be "
"used inside package scripts and post-build scripts. The options specified"
" here are applicable to Autotools packages. Options can vary for other "
"types (e.g. CMake projects typically are configured with a CMake "
"toolchain file)."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:136
msgid ""
"The releng-tool project's configuration is ready. Now to define the "
"package definitions/hashes for each package."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:139
msgid "The libnl package"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:141
msgid ""
"Update the `libnl` package definition (`my-tc-project/libnl/libnl.rt`) "
"with the following contents:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:166
msgid ""
"The libnl library uses a LGPL-2.1+ license. We configure `LIBNL_LICENSE` "
"to the equivalent [SPDX][spdx] license identifier, as well as define "
"`LIBNL_LICENSE_FILES` to point to a copy of the license text. Specifying "
"license information is not required, but can be helpful when generating "
"license data or software bill of materials (SBOM) for a project."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:171
msgid ""
"This example uses libnl v3.7.0, which we set in the `LIBNL_VERSION` "
"option. The version value is useful for managing output folders and "
"logging versions of packages."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:174
msgid "We specify the location to download sources in `LIBNL_SITE`."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:175
msgid ""
"The libnl library uses Autotools. This means we can use `LIBNL_TYPE` to "
"configure the helper type and avoid the need to create custom "
"configure/build scripts to run `./configure`, etc. (since releng-tool "
"will handle this for us)."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:179
msgid ""
"We configure `LIBNL_CONF_ENV` and `LIBNL_CONF_DEFS` to use the "
"configuration options we prepared in the root configuration. This allows "
"this Autotools package to use the desired toolchain."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:182
msgid ""
"This package is configured to install (`LIBNL_INSTALL_TYPE`) into the "
"staging area (instead of, by default, into the target directory). Since "
"we are creating a static library for `htop` to link against, there is no "
"need to place any generated content from the `libnl` package into the "
"target area."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:187
msgid ""
"Finally, we configure `LIBNL_CONF_OPTS` to tweak other options supported "
"by this package. We only need a static library, so we explicitly indicate"
" to enable static builds and disable shared builds. We also disable a "
"series of other features not needed for this example."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:192
msgid ""
"Using configuration options can be useful for disabling certain project "
"options such as disabling unit tests (which may not be desired for these "
"types of builds). It is always good to explicitly define configuration "
"entries when possible, just in case default values change for an option."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:197
msgid ""
"The above `libnl` package specifies a remote URL to download library "
"sources. These sources should be validated to ensure data is not "
"corrupted or manipulated. To do this, create a hash file alongside the "
"package definition called `libnl.hash` with the contents:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:209
msgid ""
"In this hash file, expected hashes for resources can be configured and "
"checked when releng-tool attempts to fetch resources from remote sources."
" Ideally, hashes provided from a third-party package release can be "
"directly added into these files (`<hash-type> <hash> <file>`). In this "
"example, libnl provides expected hashes for archives when they make a "
"release. We copy the hash contents into our local hash file (with a "
"helpful comment to indicate where it came from)."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:217
msgid ""
"In addition, we also provide a hash of the license document. While not "
"required, this can be useful in detecting if the license of a package "
"changes between versions."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:221
msgid "The ncurses package"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:223
msgid ""
"Update the `ncurses` package definition (`my-tc-"
"project/ncurses/ncurses.rt`) with the following contents:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:259
msgid ""
"The above almost mimics the previous `libnl` package with the exception "
"of this package having a different license and different configuration "
"options available."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:263
msgid ""
"Since `ncurses` package specifies a remote URL to download library "
"sources, we also want to update `ncurses.hash` with the contents:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:275
msgid ""
"In the previous `libnl` package, maintainers provided an official SHA-256"
" hash to use for our local hash file. For `ncurses`, maintainers provide "
"a GPG signature of their archives instead. To handle this, we manually "
"download the archive and signature file to verify its contents. Once "
"verified, we generated our own SHA-256 sum and place it into this hash "
"file (with a helpful comment). And as done in the previous package, we "
"also provide a hash of the license document."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:283
msgid "The htop package"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:285
msgid ""
"Update the `htop` package definition (`my-tc-project/htop/htop.rt`) with "
"the following contents:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:316
msgid ""
"This package defines a list of package dependencies for `htop`. "
"Specifically, we list `libnl` and `ncurses`, which will force releng-tool"
" to configure/build these packages before processing the `htop` package."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:320
msgid ""
"Since `htop` package specifies a remote URL to download library sources, "
"we also want to update `htop.hash` with the contents:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:330
msgid "Performing a build"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:332
msgid ""
"With a configuration and packages prepared, the project should be ready "
"to be built. While in the `my-tc-project` folder, invoke `releng-tool`:"
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:348
msgid ""
"Once completed, the target directory will have a compiled `htop` "
"executable that can be copied over to and run on an aarch64-running "
"target."
msgstr ""

#: ../../content/getting-started/tutorial-toolchain.md:351
msgid "This concludes this tutorial."
msgstr ""

