# SOME DESCRIPTIVE TITLE.
# Copyright (C) releng-tool
# This file is distributed under the same license as the releng-tool
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: releng-tool \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-09 21:08-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_Hant\n"
"Language-Team: zh_Hant <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../content/guides/packages/hash-file.md:1
msgid "Hash file"
msgstr ""

#: ../../content/guides/packages/hash-file.md:4
msgid ""
"An alternative to using a hash to validate a package's cache is to use an"
" [ASCII-armor](ascii-armor) instead. Although users can benefit from "
"using both validation methods, if desired."
msgstr ""

#: ../../content/guides/packages/hash-file.md:9
msgid ""
"When downloading assets from a remote instance, a package's hash file can"
" be used to help verify the integrity of any fetched content. For "
"example, if a package lists a site with a `my-archive.tgz` to download, "
"the fetch process will download the archive and verify its hash to a "
"listed entry before continuing. If a hash does not match, the build "
"process stops indicating an unexpected asset was downloaded."
msgstr ""

#: ../../content/guides/packages/hash-file.md:16
msgid "It is recommended that:"
msgstr ""

#: ../../content/guides/packages/hash-file.md:18
msgid ""
"Any URL-based site asset have a hash entry defined for the asset (to "
"ensure the package sources are not corrupted or have been unexpectedly "
"replaced)."
msgstr ""

#: ../../content/guides/packages/hash-file.md:20
msgid ""
"A hash entry should exist for license files (additional sanity check if a"
" package's license has change)."
msgstr ""

#: ../../content/guides/packages/hash-file.md:23
msgid ""
"To create a hash file for a package, add a `<my-package>.hash` file "
"inside the package's directory. For example, for a `libfoo` package, the "
"following would be expected:"
msgstr ""

#: ../../content/guides/packages/hash-file.md:36
msgid ""
"The hash file should be a UTF-8 encoded file and can contain multiple "
"hash entries. A hash entry is a 3-tuple defining the type of hash "
"algorithm used, the hash value expected and the asset associated with the"
" hash. A tuple entry is defined on a single line with each entry "
"separated by whitespace characters. For example:"
msgstr ""

#: ../../content/guides/packages/hash-file.md:49
msgid ""
"Comments are permitted in the file. Lines leading with a `#` character or"
" inlined leading `#` character after a whitespace character will be "
"ignored."
msgstr ""

#: ../../content/guides/packages/hash-file.md:52
msgid ""
"Supported hash types will vary on the Python interpreter [^hashlib] used."
" Typically, this include FIPS secure hash algorithms (e.g. `sha1`, "
"`sha224`, `sha256`, `sha384` and `sha512`) as well as (but not "
"recommended) RSA'S MD5 algorithm. For hash algorithms requiring a key "
"length, a user can define a hash entry using the format `<hash-type"
">:<key-length>`. For example, `shake_128:32`. Other algorithms may be "
"used if provided by the system's OpenSSL library."
msgstr ""

#: ../../content/guides/packages/hash-file.md:60
msgid ""
"Multiple hash entries can be provided for the same file if desired. This "
"is to assist in scenarios where a checked out asset's content changes "
"based on the system it is checked out on. For example, a text file "
"checked out from Git may use Windows line-ending on Windows system, and "
"Unix-line endings on other systems:"
msgstr ""

#: ../../content/guides/packages/hash-file.md:72
msgid "<https://docs.python.org/library/hashlib.html>"
msgstr ""

